---
const { type, value } = Astro.props;
---

<div
  class="relative flex justify-between items-center gap-3 md:flex-col md:items-stretch"
>
  <label class="fs-200 text-neutral-800/[0.4]" for={type.replace(" ", "-")}
    >{type}</label
  >
  <input type="number" id={type.replace(" ", "-")} value={value} min="0" />
  <div class="arrows">
    <button class="js-increase-btn" aria-label="Increase minutes" type="button">
      <svg xmlns="http://www.w3.org/2000/svg" width="14" height="7"
        ><path
          fill="none"
          stroke="#1E213F"
          stroke-opacity=".25"
          stroke-width="2"
          d="M1 6l6-4 6 4"></path></svg
      >
    </button>
    <button class="js-decrease-btn" aria-label="decrease minutes" type="button">
      <svg xmlns="http://www.w3.org/2000/svg" width="14" height="7"
        ><path
          fill="none"
          stroke="#1E213F"
          stroke-opacity=".25"
          stroke-width="2"
          d="M1 1l6 4 6-4"></path></svg
      >
    </button>
  </div>
</div>

<style lang="scss">
  @use "../styles/abstracts" as *;

  input[type="number"] {
    border: 0;
    background-color: $color-neutral-200;
    font-size: $font-size-500;
    padding: $size-4;
    border-radius: $border-radius-1;
    width: 60%;

    @include mq(medium) {
      width: 100%;
    }

    -moz-appearance: textfield;
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    &:focus {
      outline: 2px solid var(--selected-color);
      border-radius: $border-radius-1;
    }
  }

  .arrows {
    position: absolute;
    right: $size-4;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;

    @include mq(medium) {
      top: calc(50% + $size-3);
    }

    & > button path {
      stroke-opacity: 0.25;
      transition: stroke-opacity 270ms ease-in-out;
    }

    & > button:is(:hover, :focus-visible) path {
      stroke-opacity: 1;
    }

    & > button:focus-visible {
      outline: 2px solid var(--selected-color);
      outline-offset: -2px;
      border-radius: 5px;
    }
  }
</style>
